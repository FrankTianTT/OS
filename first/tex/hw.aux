\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Hello OS}{1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}运行截图}{1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces bochs}}{1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces terminal}}{2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}源代码}{2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces 程序输出示例}}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}汇编语言实践}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}运行截图}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}源代码}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}问题清单}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}请简述 80x86 系列的发展历史}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}说明小端和大端的区别，并说明 80x86 系列采用了哪种方式?}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}8086 有哪五类寄存器，请分别举例说明其作用?}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}什么是寻址?立即寻址和直接寻址的区别是什么?}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}请举例说明寄存器间接寻址、寄存器相对寻址、基址加变址寻址、相对基址加变址寻址四种方式的区别}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}请分别简述 MOV 指令和 LEA 指令的用法和作用?}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}请说出主程序与子程序之间至少三种参数传递方式}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.8}如何处理输入和输出，代码中哪里体现出来?}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.9}有哪些段寄存器}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.10}通过什么寄存器保存前一次的运算结果，在代码中哪里体现出来。}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.11}解释 boot.asm 文件中，org 0700h 的作用}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.12}boot.bin 应该放在软盘的哪一个扇区?为什么?}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.13}loader 的作用有哪些?}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.14}解释 NASM 语言中 [ ] 的作用}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.15}解释语句 times 510-(\$-\$\$) db 0，为什么是 510? \$ 和 \$\$ 分别表示什么?}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.16}解释配置文件 bochsrc 文件中各参数的含义}{5}\protected@file@percent }
